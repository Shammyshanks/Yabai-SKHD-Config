#!/usr/bin/env zsh

sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# default management type for yabai on startup
yabai -m config layout bsp

# New window spawns to the right if vertical split, or bottom if horizontal split
yabai -m config window_placement second_child

# Set all padding and gaps to 20pt (default: 0)
yabai -m config top_padding    0
yabai -m config bottom_padding 0
yabai -m config left_padding   0
yabai -m config right_padding  0
yabai -m config window_gap     0

# Pywal Integration
source ~/.cache/wal/colors.sh # pywal scheme - update if needed

# yabai template colours
CINSE=$(echo $foreground | sed 's/#//')

# Set window border to 6 pixels and set color to blue for active window and grey for inactive
yabai -m config window_border off

# on or off (default: off)
yabai -m config auto_balance on

# Floating point value between 0 and 1 (default: 0.5)
yabai -m config split_ratio 0.5

# set mouse interaction modifier key (default: fn)
yabai -m config mouse_modifier ctrl

# set modifier + left-click drag to resize window (default: move)
yabai -m config mouse_action1 move

# set modifier + right-click drag to resize window (default: resize)
yabai -m config mouse_action2 resize

# set mouse drop action to swap or stack windows
yabai -m config mouse_drop_action stack

# set focus follows mouse mode (default: off, options: off, autoraise, autofocus)
yabai -m config focus_follows_mouse autoraise

# set mouse follows focus mode (default: off)
yabai -m config mouse_follows_focus off

# floating windows are always on top (default: off)
yabai -m config window_topmost on

# modify window shadows (default: on, options: on, off, float)
# example: show shadows only for floating windows
yabai -m config window_shadow off

# turn off manage and border for various apps
yabai -m rule --add app="Installer" manage=off
yabai -m rule --add app="Installer" border=on
yabai -m rule --add app="LuLu" manage=off
yabai -m rule --add app="LuLu" border=on
yabai -m rule --add app="System\ Preferences" manage=off
yabai -m rule --add app="System\ Preferences" border=on
yabai -m rule --add app="Bartender\ 3" manage=off
yabai -m rule --add app="Bartender\ 3" border=on
yabai -m rule --add app="iStat\ Menus" manage=off
yabai -m rule --add app="iStat\ Menus" border=off
yabai -m rule --add app="MenuTube" manage=off
yabai -m rule --add app="MenuTube" border=off
yabai -m rule --add app="Alfred" manage=off
yabai -m rule --add app="Alfred" border=off
yabai -m rule --add app="Contexts" manage=off
yabai -m rule --add app="Contexts" border=off
yabai -m rule --add app="Karabiner-Elements" manage=off
yabai -m rule --add app="Karabiner-EventsViewer" manage=off
yabai -m rule --add app="Übersicht" manage=off
yabai -m rule --add app="Übersicht" border=off

# integrate with SwiftBar/Yabai-Spaces
yabai -m signal --add event=space_changed action="open -gj 'swiftbar://refreshplugin?name=yabai'"
yabai -m signal --add event=mission_control_exit action="open -gj 'swiftbar://refreshplugin?name=yabai'"
yabai -m signal --add event=display_added action="open -gj 'swiftbar://refreshplugin?name=yabai'"
yabai -m signal --add event=display_removed action="open -gj 'swiftbar://refreshplugin?name=yabai'"
yabai -m signal --add event=display_changed action="open -gj 'swiftbar://refreshplugin?name=yabai'"
yabai -m signal --add event=display_moved action="open -gj 'swiftbar://refreshplugin?name=yabai'"
yabai -m signal --add event=system_woke action="open -gj 'swiftbar://refreshplugin?name=yabai'"
yabai -m signal --add event=window_focused action="open -gj 'swiftbar://refreshplugin?name=yabai'"
yabai -m signal --add event=window_created action="open -gj 'swiftbar://refreshplugin?name=yabai'"
yabai -m signal --add event=window_destroyed action="open -gj 'swiftbar://refreshplugin?name=yabai'"
yabai -m signal --add event=window_minimized action="open -gj 'swiftbar://refreshplugin?name=yabai'"
yabai -m signal --add event=window_deminimized action="open -gj 'swiftbar://refreshplugin?name=yabai'"

# call .script functions
yabai -m signal --add event=space_changed action="source ~/.scripts/.gaps; source ~/.scripts/.uber; source ~/.scripts/.border"
yabai -m signal --add event=window_created action="source ~/.scripts/.gaps; source ~/.scripts/.uber; source ~/.scripts/.border"
yabai -m signal --add event=window_destroyed action="source ~/.scripts/.gaps; source ~/.scripts/.uber; source ~/.scripts/.border"
yabai -m signal --add event=window_moved action="source ~/.scripts/.gaps; source ~/.scripts/.uber; source ~/.scripts/.border"
yabai -m signal --add event=application_visible action="source ~/.scripts/.gaps; source ~/.scripts/.uber; source ~/.scripts/.border"
yabai -m signal --add event=application_hidden action="source ~/.scripts/.gaps; source ~/.scripts/.uber; source ~/.scripts/.border"
yabai -m signal --add event=application_launched action="source ~/.scripts/.gaps; source ~/.scripts/.uber; source ~/.scripts/.border"
yabai -m signal --add event=application_terminated action="source ~/.scripts/.gaps; source ~/.scripts/.uber; source ~/.scripts/.border"
yabai -m signal --add event=window_minimized action="source ~/.scripts/.gaps; source ~/.scripts/.uber; source ~/.scripts/.border"
yabai -m signal --add event=window_deminimized action="source ~/.scripts/.gaps; source ~/.scripts/.uber; source ~/.scripts/.border"
yabai -m signal --add event=display_changed action="source ~/.scripts/.gaps; source ~/.scripts/.uber; source ~/.scripts/.border"
yabai -m signal --add event=mission_control_exit action="source ~/.scripts/.gaps; source ~/.scripts/.uber; source ~/.scripts/.border"

# Debug mode on
yabai -m config debug_output on

# Auto update yabai
YABAI_CERT=yabai-cert sh -c "$(curl -fsSL "https://git.io/update-yabai")" &

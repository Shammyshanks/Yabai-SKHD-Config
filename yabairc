# bsp or float (default: bsp)
yabai -m config layout bsp

# New window spawns to the left if vertical split, or top if horizontal split
yabai -m config window_placement first_child

# New window spawns to the right if vertical split, or bottom if horizontal split
yabai -m config window_placement second_child

# Set all padding and gaps to 20pt (default: 0)
yabai -m config top_padding    0
yabai -m config bottom_padding 0
yabai -m config left_padding   0
yabai -m config right_padding  0
yabai -m config window_gap     0

# on or off (default: off)
yabai -m config auto_balance on

# Floating point value between 0 and 1 (default: 0.5)
yabai -m config split_ratio 0.5

# set mouse interaction modifier key (default: fn)
yabai -m config mouse_modifier ctrl

# set modifier + left-click drag to resize window (default: move)
yabai -m config mouse_action1 move

# set modifier + right-click drag to resize window (default: resize)
yabai -m config mouse_action2 resize

# set focus follows mouse mode (default: off, options: off, autoraise, autofocus)
yabai -m config focus_follows_mouse autoraise

# set mouse follows focus mode (default: off)
yabai -m config mouse_follows_focus off

# floating windows are always on top (default: off)
yabai -m config window_topmost on

# modify window shadows (default: on, options: on, off, float)
# example: show shadows only for floating windows
yabai -m config window_shadow off

# window opacity (default: off)
# example: render all unfocused windows with 90% opacity
yabai -m config window_opacity off
# yabai -m config window_opacity_duration 0.0
# yabai -m config active_window_opacity 1.0
# yabai -m config normal_window_opacity 0.75

yabai -m rule --add app="iStat\ Menus" manage=off
yabai -m rule --add app="LuLu" manage=off
yabai -m rule --add app="System\ Preferences" manage=off
yabai -m rule --add app="Alfred\ Preferences" manage=off
yabai -m rule --add app="Contexts" manage=off
yabai -m rule --add app="Karabiner-Elements" manage=off
yabai -m rule --add app="Karabiner-EventsViewer" manage=off
yabai -m rule --add app="Keyboard\ Maestro" manage=off
yabai -m rule --add app="BetterTouchTool" manage=off
yabai -m rule --add app="Ãœbersicht" manage=off
yabai -m rule --add app="Installer" manage=off

yabai -m config debug_output on

yabai -m signal --add event=space_changed action="open -gj 'bitbar://refreshPlugin?name=yabai.1d.sh'"
yabai -m signal --add event=display_added action="open -gj 'bitbar://refreshPlugin?name=yabai.1d.sh'"
yabai -m signal --add event=display_removed action="open -gj 'bitbar://refreshPlugin?name=yabai.1d.sh'"
yabai -m signal --add event=display_changed action="open -gj 'bitbar://refreshPlugin?name=yabai.1d.sh'"
yabai -m signal --add event=display_moved action="open -gj 'bitbar://refreshPlugin?name=yabai.1d.sh'"
yabai -m signal --add event=mission_control_exit action="open -gj 'bitbar://refreshPlugin?name=yabai.1d.sh'"
yabai -m signal --add event=system_woke action="open -gj 'bitbar://refreshPlugin?name=yabai.1d.sh'"

yabai -m signal --add event=space_changed action="source ~/.gaps; source ~/.uber"
yabai -m signal --add event=window_created action="source ~/.gaps; source ~/.uber"
yabai -m signal --add event=window_destroyed action="source ~/.gaps; source ~/.uber"
yabai -m signal --add event=window_moved action="source ~/.gaps; source ~/.uber"
yabai -m signal --add event=application_visible action="source ~/.gaps; source ~/.uber"
yabai -m signal --add event=application_hidden action="source ~/.gaps; source ~/.uber"
# yabai -m signal --add event=application_launched action="source ~/.gaps; source ~/.uber"
# yabai -m signal --add event=application_terminated action="source ~/.gaps; source ~/.uber"
yabai -m signal --add event=window_minimized action="source ~/.gaps; source ~/.uber"
yabai -m signal --add event=window_deminimized action="source ~/.gaps; source ~/.uber"
yabai -m signal --add event=display_changed action="source ~/.gaps; source ~/.uber"
yabai -m signal --add event=mission_control_exit action="source ~/.gaps; source ~/.uber"
